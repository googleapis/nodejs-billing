// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

import * as gax from 'google-gax';
import {Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback, GaxCall} from 'google-gax';
import * as path from 'path';

import { Transform } from 'stream';
import { RequestType } from 'google-gax/build/src/apitypes';
import * as protos from '../../protos/protos';
import * as gapicConfig from './cloud_billing_client_config.json';

const version = require('../../../package.json').version;

/**
 *  Retrieves GCP Console billing accounts and associates them with projects.
 * @class
 * @memberof v1
 */
export class CloudBillingClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {page: {}, stream: {}, longrunning: {}, batching: {}};
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  cloudBillingStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of CloudBillingClient.
   *
   * @param {object} [options] - The configuration object. See the subsequent
   *   parameters for more details.
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   */

  constructor(opts?: ClientOptions) {
    // Ensure that options include the service address and port.
    const staticMembers = this.constructor as typeof CloudBillingClient;
    const servicePath = opts && opts.servicePath ?
        opts.servicePath :
        ((opts && opts.apiEndpoint) ? opts.apiEndpoint :
                                      staticMembers.servicePath);
    const port = opts && opts.port ? opts.port : staticMembers.port;

    if (!opts) {
      opts = {servicePath, port};
    }
    opts.servicePath = opts.servicePath || servicePath;
    opts.port = opts.port || port;
    opts.clientConfig = opts.clientConfig || {};

    const isBrowser = (typeof window !== 'undefined');
    if (isBrowser){
      opts.fallback = true;
    }
    // If we are in browser, we are already using fallback because of the
    // "browser" field in package.json.
    // But if we were explicitly requested to use fallback, let's do it now.
    this._gaxModule = !isBrowser && opts.fallback ? gax.fallback : gax;

    // Create a `gaxGrpc` object, with any grpc-specific options
    // sent to the client.
    opts.scopes = (this.constructor as typeof CloudBillingClient).scopes;
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = (this._gaxGrpc.auth as gax.GoogleAuth);

    // Determine the client header string.
    const clientHeader = [
      `gax/${this._gaxModule.version}`,
      `gapic/${version}`,
    ];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    // For Node.js, pass the path to JSON proto file.
    // For browsers, pass the JSON content.

    const nodejsProtoPath = path.join(__dirname, '..', '..', 'protos', 'protos.json');
    this._protos = this._gaxGrpc.loadProto(
      opts.fallback ?
        // eslint-disable-next-line @typescript-eslint/no-var-requires
        require("../../protos/protos.json") :
        nodejsProtoPath
    );

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      billingAccountPathTemplate: new this._gaxModule.PathTemplate(
        'billingAccounts/{billing_account}'
      ),
      servicePathTemplate: new this._gaxModule.PathTemplate(
        'services/{service}'
      ),
      skuPathTemplate: new this._gaxModule.PathTemplate(
        'services/{service}/skus/{sku}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listBillingAccounts:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'billingAccounts'),
      listProjectBillingInfo:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'projectBillingInfo')
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
        'google.cloud.billing.v1.CloudBilling', gapicConfig as gax.ClientConfig,
        opts.clientConfig || {}, {'x-goog-api-client': clientHeader.join(' ')});

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.cloudBillingStub) {
      return this.cloudBillingStub;
    }

    // Put together the "service stub" for
    // google.cloud.billing.v1.CloudBilling.
    this.cloudBillingStub = this._gaxGrpc.createStub(
        this._opts.fallback ?
          (this._protos as protobuf.Root).lookupService('google.cloud.billing.v1.CloudBilling') :
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.billing.v1.CloudBilling,
        this._opts) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const cloudBillingStubMethods =
        ['getBillingAccount', 'listBillingAccounts', 'updateBillingAccount', 'createBillingAccount', 'listProjectBillingInfo', 'getProjectBillingInfo', 'updateProjectBillingInfo', 'getIamPolicy', 'setIamPolicy', 'testIamPermissions'];
    for (const methodName of cloudBillingStubMethods) {
      const callPromise = this.cloudBillingStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error|null|undefined) => () => {
          throw err;
        });

      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        this.descriptors.page[methodName] ||
            this.descriptors.stream[methodName] ||
            this.descriptors.longrunning[methodName]
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.cloudBillingStub;
  }

  /**
   * The DNS address for this API service.
   */
  static get servicePath() {
    return 'cloudbilling.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   */
  static get apiEndpoint() {
    return 'cloudbilling.googleapis.com';
  }

  /**
   * The port for this API service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/cloud-platform'
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @param {function(Error, string)} callback - the callback to
   *   be called with the current project Id.
   */
  getProjectId(callback?: Callback<string, undefined, undefined>):
      Promise<string>|void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  getBillingAccount(
      request: protos.google.cloud.billing.v1.IGetBillingAccountRequest,
      options?: gax.CallOptions):
      Promise<[
        protos.google.cloud.billing.v1.IBillingAccount,
        protos.google.cloud.billing.v1.IGetBillingAccountRequest|undefined, {}|undefined
      ]>;
  getBillingAccount(
      request: protos.google.cloud.billing.v1.IGetBillingAccountRequest,
      options: gax.CallOptions,
      callback: Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          protos.google.cloud.billing.v1.IGetBillingAccountRequest|null|undefined,
          {}|null|undefined>): void;
  getBillingAccount(
      request: protos.google.cloud.billing.v1.IGetBillingAccountRequest,
      callback: Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          protos.google.cloud.billing.v1.IGetBillingAccountRequest|null|undefined,
          {}|null|undefined>): void;
/**
 * Gets information about a billing account. The current authenticated user
 * must be a [viewer of the billing
 * account](https://cloud.google.com/billing/docs/how-to/billing-access).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the billing account to retrieve. For example,
 *   `billingAccounts/012345-567890-ABCDEF`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [BillingAccount]{@link google.cloud.billing.v1.BillingAccount}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  getBillingAccount(
      request: protos.google.cloud.billing.v1.IGetBillingAccountRequest,
      optionsOrCallback?: gax.CallOptions|Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          protos.google.cloud.billing.v1.IGetBillingAccountRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          protos.google.cloud.billing.v1.IGetBillingAccountRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.billing.v1.IBillingAccount,
        protos.google.cloud.billing.v1.IGetBillingAccountRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getBillingAccount(request, options, callback);
  }
  updateBillingAccount(
      request: protos.google.cloud.billing.v1.IUpdateBillingAccountRequest,
      options?: gax.CallOptions):
      Promise<[
        protos.google.cloud.billing.v1.IBillingAccount,
        protos.google.cloud.billing.v1.IUpdateBillingAccountRequest|undefined, {}|undefined
      ]>;
  updateBillingAccount(
      request: protos.google.cloud.billing.v1.IUpdateBillingAccountRequest,
      options: gax.CallOptions,
      callback: Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          protos.google.cloud.billing.v1.IUpdateBillingAccountRequest|null|undefined,
          {}|null|undefined>): void;
  updateBillingAccount(
      request: protos.google.cloud.billing.v1.IUpdateBillingAccountRequest,
      callback: Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          protos.google.cloud.billing.v1.IUpdateBillingAccountRequest|null|undefined,
          {}|null|undefined>): void;
/**
 * Updates a billing account's fields.
 * Currently the only field that can be edited is `display_name`.
 * The current authenticated user must have the `billing.accounts.update`
 * IAM permission, which is typically given to the
 * [administrator](https://cloud.google.com/billing/docs/how-to/billing-access)
 * of the billing account.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the billing account resource to be updated.
 * @param {google.cloud.billing.v1.BillingAccount} request.account
 *   Required. The billing account resource to replace the resource on the server.
 * @param {google.protobuf.FieldMask} request.updateMask
 *   The update mask applied to the resource.
 *   Only "display_name" is currently supported.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [BillingAccount]{@link google.cloud.billing.v1.BillingAccount}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  updateBillingAccount(
      request: protos.google.cloud.billing.v1.IUpdateBillingAccountRequest,
      optionsOrCallback?: gax.CallOptions|Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          protos.google.cloud.billing.v1.IUpdateBillingAccountRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          protos.google.cloud.billing.v1.IUpdateBillingAccountRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.billing.v1.IBillingAccount,
        protos.google.cloud.billing.v1.IUpdateBillingAccountRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateBillingAccount(request, options, callback);
  }
  createBillingAccount(
      request: protos.google.cloud.billing.v1.ICreateBillingAccountRequest,
      options?: gax.CallOptions):
      Promise<[
        protos.google.cloud.billing.v1.IBillingAccount,
        protos.google.cloud.billing.v1.ICreateBillingAccountRequest|undefined, {}|undefined
      ]>;
  createBillingAccount(
      request: protos.google.cloud.billing.v1.ICreateBillingAccountRequest,
      options: gax.CallOptions,
      callback: Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          protos.google.cloud.billing.v1.ICreateBillingAccountRequest|null|undefined,
          {}|null|undefined>): void;
  createBillingAccount(
      request: protos.google.cloud.billing.v1.ICreateBillingAccountRequest,
      callback: Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          protos.google.cloud.billing.v1.ICreateBillingAccountRequest|null|undefined,
          {}|null|undefined>): void;
/**
 * Creates a billing account.
 * This method can only be used to create
 * [billing subaccounts](https://cloud.google.com/billing/docs/concepts)
 * by GCP resellers.
 * When creating a subaccount, the current authenticated user must have the
 * `billing.accounts.update` IAM permission on the master account, which is
 * typically given to billing account
 * [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
 * This method will return an error if the master account has not been
 * provisioned as a reseller account.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.cloud.billing.v1.BillingAccount} request.billingAccount
 *   Required. The billing account resource to create.
 *   Currently CreateBillingAccount only supports subaccount creation, so
 *   any created billing accounts must be under a provided master billing
 *   account.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [BillingAccount]{@link google.cloud.billing.v1.BillingAccount}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  createBillingAccount(
      request: protos.google.cloud.billing.v1.ICreateBillingAccountRequest,
      optionsOrCallback?: gax.CallOptions|Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          protos.google.cloud.billing.v1.ICreateBillingAccountRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          protos.google.cloud.billing.v1.ICreateBillingAccountRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.billing.v1.IBillingAccount,
        protos.google.cloud.billing.v1.ICreateBillingAccountRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    this.initialize();
    return this.innerApiCalls.createBillingAccount(request, options, callback);
  }
  getProjectBillingInfo(
      request: protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest,
      options?: gax.CallOptions):
      Promise<[
        protos.google.cloud.billing.v1.IProjectBillingInfo,
        protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest|undefined, {}|undefined
      ]>;
  getProjectBillingInfo(
      request: protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest,
      options: gax.CallOptions,
      callback: Callback<
          protos.google.cloud.billing.v1.IProjectBillingInfo,
          protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest|null|undefined,
          {}|null|undefined>): void;
  getProjectBillingInfo(
      request: protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest,
      callback: Callback<
          protos.google.cloud.billing.v1.IProjectBillingInfo,
          protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest|null|undefined,
          {}|null|undefined>): void;
/**
 * Gets the billing information for a project. The current authenticated user
 * must have [permission to view the
 * project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
 * ).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the project for which billing information is
 *   retrieved. For example, `projects/tokyo-rain-123`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ProjectBillingInfo]{@link google.cloud.billing.v1.ProjectBillingInfo}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  getProjectBillingInfo(
      request: protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest,
      optionsOrCallback?: gax.CallOptions|Callback<
          protos.google.cloud.billing.v1.IProjectBillingInfo,
          protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.billing.v1.IProjectBillingInfo,
          protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.billing.v1.IProjectBillingInfo,
        protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getProjectBillingInfo(request, options, callback);
  }
  updateProjectBillingInfo(
      request: protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest,
      options?: gax.CallOptions):
      Promise<[
        protos.google.cloud.billing.v1.IProjectBillingInfo,
        protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest|undefined, {}|undefined
      ]>;
  updateProjectBillingInfo(
      request: protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest,
      options: gax.CallOptions,
      callback: Callback<
          protos.google.cloud.billing.v1.IProjectBillingInfo,
          protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest|null|undefined,
          {}|null|undefined>): void;
  updateProjectBillingInfo(
      request: protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest,
      callback: Callback<
          protos.google.cloud.billing.v1.IProjectBillingInfo,
          protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest|null|undefined,
          {}|null|undefined>): void;
/**
 * Sets or updates the billing account associated with a project. You specify
 * the new billing account by setting the `billing_account_name` in the
 * `ProjectBillingInfo` resource to the resource name of a billing account.
 * Associating a project with an open billing account enables billing on the
 * project and allows charges for resource usage. If the project already had a
 * billing account, this method changes the billing account used for resource
 * usage charges.
 *
 * *Note:* Incurred charges that have not yet been reported in the transaction
 * history of the GCP Console might be billed to the new billing
 * account, even if the charge occurred before the new billing account was
 * assigned to the project.
 *
 * The current authenticated user must have ownership privileges for both the
 * [project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
 * ) and the [billing
 * account](https://cloud.google.com/billing/docs/how-to/billing-access).
 *
 * You can disable billing on the project by setting the
 * `billing_account_name` field to empty. This action disassociates the
 * current billing account from the project. Any billable activity of your
 * in-use services will stop, and your application could stop functioning as
 * expected. Any unbilled charges to date will be billed to the previously
 * associated account. The current authenticated user must be either an owner
 * of the project or an owner of the billing account for the project.
 *
 * Note that associating a project with a *closed* billing account will have
 * much the same effect as disabling billing on the project: any paid
 * resources used by the project will be shut down. Thus, unless you wish to
 * disable billing, you should always call this method with the name of an
 * *open* billing account.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the project associated with the billing information
 *   that you want to update. For example, `projects/tokyo-rain-123`.
 * @param {google.cloud.billing.v1.ProjectBillingInfo} request.projectBillingInfo
 *   The new billing information for the project. Read-only fields are ignored;
 *   thus, you can leave empty all fields except `billing_account_name`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ProjectBillingInfo]{@link google.cloud.billing.v1.ProjectBillingInfo}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  updateProjectBillingInfo(
      request: protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest,
      optionsOrCallback?: gax.CallOptions|Callback<
          protos.google.cloud.billing.v1.IProjectBillingInfo,
          protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.billing.v1.IProjectBillingInfo,
          protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.billing.v1.IProjectBillingInfo,
        protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateProjectBillingInfo(request, options, callback);
  }
  getIamPolicy(
      request: protos.google.iam.v1.IGetIamPolicyRequest,
      options?: gax.CallOptions):
      Promise<[
        protos.google.iam.v1.IPolicy,
        protos.google.iam.v1.IGetIamPolicyRequest|undefined, {}|undefined
      ]>;
  getIamPolicy(
      request: protos.google.iam.v1.IGetIamPolicyRequest,
      options: gax.CallOptions,
      callback: Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.IGetIamPolicyRequest|null|undefined,
          {}|null|undefined>): void;
  getIamPolicy(
      request: protos.google.iam.v1.IGetIamPolicyRequest,
      callback: Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.IGetIamPolicyRequest|null|undefined,
          {}|null|undefined>): void;
/**
 * Gets the access control policy for a billing account.
 * The caller must have the `billing.accounts.getIamPolicy` permission on the
 * account, which is often given to billing account
 * [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {} request.
 * @param {} request.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Policy]{@link google.iam.v1.Policy}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  getIamPolicy(
      request: protos.google.iam.v1.IGetIamPolicyRequest,
      optionsOrCallback?: gax.CallOptions|Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.IGetIamPolicyRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.IGetIamPolicyRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.iam.v1.IPolicy,
        protos.google.iam.v1.IGetIamPolicyRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'resource': request.resource || '',
    });
    this.initialize();
    return this.innerApiCalls.getIamPolicy(request, options, callback);
  }
  setIamPolicy(
      request: protos.google.iam.v1.ISetIamPolicyRequest,
      options?: gax.CallOptions):
      Promise<[
        protos.google.iam.v1.IPolicy,
        protos.google.iam.v1.ISetIamPolicyRequest|undefined, {}|undefined
      ]>;
  setIamPolicy(
      request: protos.google.iam.v1.ISetIamPolicyRequest,
      options: gax.CallOptions,
      callback: Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.ISetIamPolicyRequest|null|undefined,
          {}|null|undefined>): void;
  setIamPolicy(
      request: protos.google.iam.v1.ISetIamPolicyRequest,
      callback: Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.ISetIamPolicyRequest|null|undefined,
          {}|null|undefined>): void;
/**
 * Sets the access control policy for a billing account. Replaces any existing
 * policy.
 * The caller must have the `billing.accounts.setIamPolicy` permission on the
 * account, which is often given to billing account
 * [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {} request.
 * @param {} request.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Policy]{@link google.iam.v1.Policy}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  setIamPolicy(
      request: protos.google.iam.v1.ISetIamPolicyRequest,
      optionsOrCallback?: gax.CallOptions|Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.ISetIamPolicyRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.ISetIamPolicyRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.iam.v1.IPolicy,
        protos.google.iam.v1.ISetIamPolicyRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'resource': request.resource || '',
    });
    this.initialize();
    return this.innerApiCalls.setIamPolicy(request, options, callback);
  }
  testIamPermissions(
      request: protos.google.iam.v1.ITestIamPermissionsRequest,
      options?: gax.CallOptions):
      Promise<[
        protos.google.iam.v1.ITestIamPermissionsResponse,
        protos.google.iam.v1.ITestIamPermissionsRequest|undefined, {}|undefined
      ]>;
  testIamPermissions(
      request: protos.google.iam.v1.ITestIamPermissionsRequest,
      options: gax.CallOptions,
      callback: Callback<
          protos.google.iam.v1.ITestIamPermissionsResponse,
          protos.google.iam.v1.ITestIamPermissionsRequest|null|undefined,
          {}|null|undefined>): void;
  testIamPermissions(
      request: protos.google.iam.v1.ITestIamPermissionsRequest,
      callback: Callback<
          protos.google.iam.v1.ITestIamPermissionsResponse,
          protos.google.iam.v1.ITestIamPermissionsRequest|null|undefined,
          {}|null|undefined>): void;
/**
 * Tests the access control policy for a billing account. This method takes
 * the resource and a set of permissions as input and returns the subset of
 * the input permissions that the caller is allowed for that resource.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {} request.
 * @param {} request.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  testIamPermissions(
      request: protos.google.iam.v1.ITestIamPermissionsRequest,
      optionsOrCallback?: gax.CallOptions|Callback<
          protos.google.iam.v1.ITestIamPermissionsResponse,
          protos.google.iam.v1.ITestIamPermissionsRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.iam.v1.ITestIamPermissionsResponse,
          protos.google.iam.v1.ITestIamPermissionsRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.iam.v1.ITestIamPermissionsResponse,
        protos.google.iam.v1.ITestIamPermissionsRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'resource': request.resource || '',
    });
    this.initialize();
    return this.innerApiCalls.testIamPermissions(request, options, callback);
  }

  listBillingAccounts(
      request: protos.google.cloud.billing.v1.IListBillingAccountsRequest,
      options?: gax.CallOptions):
      Promise<[
        protos.google.cloud.billing.v1.IBillingAccount[],
        protos.google.cloud.billing.v1.IListBillingAccountsRequest|null,
        protos.google.cloud.billing.v1.IListBillingAccountsResponse
      ]>;
  listBillingAccounts(
      request: protos.google.cloud.billing.v1.IListBillingAccountsRequest,
      options: gax.CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.billing.v1.IListBillingAccountsRequest,
          protos.google.cloud.billing.v1.IListBillingAccountsResponse|null|undefined,
          protos.google.cloud.billing.v1.IBillingAccount>): void;
  listBillingAccounts(
      request: protos.google.cloud.billing.v1.IListBillingAccountsRequest,
      callback: PaginationCallback<
          protos.google.cloud.billing.v1.IListBillingAccountsRequest,
          protos.google.cloud.billing.v1.IListBillingAccountsResponse|null|undefined,
          protos.google.cloud.billing.v1.IBillingAccount>): void;
/**
 * Lists the billing accounts that the current authenticated user has
 * permission to
 * [view](https://cloud.google.com/billing/docs/how-to/billing-access).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {number} request.pageSize
 *   Requested page size. The maximum page size is 100; this is also the
 *   default.
 * @param {string} request.pageToken
 *   A token identifying a page of results to return. This should be a
 *   `next_page_token` value returned from a previous `ListBillingAccounts`
 *   call. If unspecified, the first page of results is returned.
 * @param {string} request.filter
 *   Options for how to filter the returned billing accounts.
 *   Currently this only supports filtering for
 *   [subaccounts](https://cloud.google.com/billing/docs/concepts) under a
 *   single provided reseller billing account.
 *   (e.g. "master_billing_account=billingAccounts/012345-678901-ABCDEF").
 *   Boolean algebra and other fields are not currently supported.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [BillingAccount]{@link google.cloud.billing.v1.BillingAccount}.
 *   The client library support auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *
 *   When autoPaginate: false is specified through options, the array has three elements.
 *   The first element is Array of [BillingAccount]{@link google.cloud.billing.v1.BillingAccount} that corresponds to
 *   the one page received from the API server.
 *   If the second element is not null it contains the request object of type [ListBillingAccountsRequest]{@link google.cloud.billing.v1.ListBillingAccountsRequest}
 *   that can be used to obtain the next page of the results.
 *   If it is null, the next page does not exist.
 *   The third element contains the raw response received from the API server. Its type is
 *   [ListBillingAccountsResponse]{@link google.cloud.billing.v1.ListBillingAccountsResponse}.
 *
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  listBillingAccounts(
      request: protos.google.cloud.billing.v1.IListBillingAccountsRequest,
      optionsOrCallback?: gax.CallOptions|PaginationCallback<
          protos.google.cloud.billing.v1.IListBillingAccountsRequest,
          protos.google.cloud.billing.v1.IListBillingAccountsResponse|null|undefined,
          protos.google.cloud.billing.v1.IBillingAccount>,
      callback?: PaginationCallback<
          protos.google.cloud.billing.v1.IListBillingAccountsRequest,
          protos.google.cloud.billing.v1.IListBillingAccountsResponse|null|undefined,
          protos.google.cloud.billing.v1.IBillingAccount>):
      Promise<[
        protos.google.cloud.billing.v1.IBillingAccount[],
        protos.google.cloud.billing.v1.IListBillingAccountsRequest|null,
        protos.google.cloud.billing.v1.IListBillingAccountsResponse
      ]>|void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    this.initialize();
    return this.innerApiCalls.listBillingAccounts(request, options, callback);
  }

/**
 * Equivalent to {@link listBillingAccounts}, but returns a NodeJS Stream object.
 *
 * This fetches the paged responses for {@link listBillingAccounts} continuously
 * and invokes the callback registered for 'data' event for each element in the
 * responses.
 *
 * The returned object has 'end' method when no more elements are required.
 *
 * autoPaginate option will be ignored.
 *
 * @see {@link https://nodejs.org/api/stream.html}
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {number} request.pageSize
 *   Requested page size. The maximum page size is 100; this is also the
 *   default.
 * @param {string} request.pageToken
 *   A token identifying a page of results to return. This should be a
 *   `next_page_token` value returned from a previous `ListBillingAccounts`
 *   call. If unspecified, the first page of results is returned.
 * @param {string} request.filter
 *   Options for how to filter the returned billing accounts.
 *   Currently this only supports filtering for
 *   [subaccounts](https://cloud.google.com/billing/docs/concepts) under a
 *   single provided reseller billing account.
 *   (e.g. "master_billing_account=billingAccounts/012345-678901-ABCDEF").
 *   Boolean algebra and other fields are not currently supported.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [BillingAccount]{@link google.cloud.billing.v1.BillingAccount} on 'data' event.
 */
  listBillingAccountsStream(
      request?: protos.google.cloud.billing.v1.IListBillingAccountsRequest,
      options?: gax.CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listBillingAccounts.createStream(
      this.innerApiCalls.listBillingAccounts as gax.GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to {@link listBillingAccounts}, but returns an iterable object.
 *
 * for-await-of syntax is used with the iterable to recursively get response element on-demand.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {number} request.pageSize
 *   Requested page size. The maximum page size is 100; this is also the
 *   default.
 * @param {string} request.pageToken
 *   A token identifying a page of results to return. This should be a
 *   `next_page_token` value returned from a previous `ListBillingAccounts`
 *   call. If unspecified, the first page of results is returned.
 * @param {string} request.filter
 *   Options for how to filter the returned billing accounts.
 *   Currently this only supports filtering for
 *   [subaccounts](https://cloud.google.com/billing/docs/concepts) under a
 *   single provided reseller billing account.
 *   (e.g. "master_billing_account=billingAccounts/012345-678901-ABCDEF").
 *   Boolean algebra and other fields are not currently supported.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
 */
  listBillingAccountsAsync(
      request?: protos.google.cloud.billing.v1.IListBillingAccountsRequest,
      options?: gax.CallOptions):
    AsyncIterable<protos.google.cloud.billing.v1.IBillingAccount>{
    request = request || {};
    options = options || {};
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listBillingAccounts.asyncIterate(
      this.innerApiCalls['listBillingAccounts'] as GaxCall,
      request as unknown as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.billing.v1.IBillingAccount>;
  }
  listProjectBillingInfo(
      request: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
      options?: gax.CallOptions):
      Promise<[
        protos.google.cloud.billing.v1.IProjectBillingInfo[],
        protos.google.cloud.billing.v1.IListProjectBillingInfoRequest|null,
        protos.google.cloud.billing.v1.IListProjectBillingInfoResponse
      ]>;
  listProjectBillingInfo(
      request: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
      options: gax.CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
          protos.google.cloud.billing.v1.IListProjectBillingInfoResponse|null|undefined,
          protos.google.cloud.billing.v1.IProjectBillingInfo>): void;
  listProjectBillingInfo(
      request: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
      callback: PaginationCallback<
          protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
          protos.google.cloud.billing.v1.IListProjectBillingInfoResponse|null|undefined,
          protos.google.cloud.billing.v1.IProjectBillingInfo>): void;
/**
 * Lists the projects associated with a billing account. The current
 * authenticated user must have the `billing.resourceAssociations.list` IAM
 * permission, which is often given to billing account
 * [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the billing account associated with the projects that
 *   you want to list. For example, `billingAccounts/012345-567890-ABCDEF`.
 * @param {number} request.pageSize
 *   Requested page size. The maximum page size is 100; this is also the
 *   default.
 * @param {string} request.pageToken
 *   A token identifying a page of results to be returned. This should be a
 *   `next_page_token` value returned from a previous `ListProjectBillingInfo`
 *   call. If unspecified, the first page of results is returned.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [ProjectBillingInfo]{@link google.cloud.billing.v1.ProjectBillingInfo}.
 *   The client library support auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *
 *   When autoPaginate: false is specified through options, the array has three elements.
 *   The first element is Array of [ProjectBillingInfo]{@link google.cloud.billing.v1.ProjectBillingInfo} that corresponds to
 *   the one page received from the API server.
 *   If the second element is not null it contains the request object of type [ListProjectBillingInfoRequest]{@link google.cloud.billing.v1.ListProjectBillingInfoRequest}
 *   that can be used to obtain the next page of the results.
 *   If it is null, the next page does not exist.
 *   The third element contains the raw response received from the API server. Its type is
 *   [ListProjectBillingInfoResponse]{@link google.cloud.billing.v1.ListProjectBillingInfoResponse}.
 *
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  listProjectBillingInfo(
      request: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
      optionsOrCallback?: gax.CallOptions|PaginationCallback<
          protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
          protos.google.cloud.billing.v1.IListProjectBillingInfoResponse|null|undefined,
          protos.google.cloud.billing.v1.IProjectBillingInfo>,
      callback?: PaginationCallback<
          protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
          protos.google.cloud.billing.v1.IListProjectBillingInfoResponse|null|undefined,
          protos.google.cloud.billing.v1.IProjectBillingInfo>):
      Promise<[
        protos.google.cloud.billing.v1.IProjectBillingInfo[],
        protos.google.cloud.billing.v1.IListProjectBillingInfoRequest|null,
        protos.google.cloud.billing.v1.IListProjectBillingInfoResponse
      ]>|void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.listProjectBillingInfo(request, options, callback);
  }

/**
 * Equivalent to {@link listProjectBillingInfo}, but returns a NodeJS Stream object.
 *
 * This fetches the paged responses for {@link listProjectBillingInfo} continuously
 * and invokes the callback registered for 'data' event for each element in the
 * responses.
 *
 * The returned object has 'end' method when no more elements are required.
 *
 * autoPaginate option will be ignored.
 *
 * @see {@link https://nodejs.org/api/stream.html}
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the billing account associated with the projects that
 *   you want to list. For example, `billingAccounts/012345-567890-ABCDEF`.
 * @param {number} request.pageSize
 *   Requested page size. The maximum page size is 100; this is also the
 *   default.
 * @param {string} request.pageToken
 *   A token identifying a page of results to be returned. This should be a
 *   `next_page_token` value returned from a previous `ListProjectBillingInfo`
 *   call. If unspecified, the first page of results is returned.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [ProjectBillingInfo]{@link google.cloud.billing.v1.ProjectBillingInfo} on 'data' event.
 */
  listProjectBillingInfoStream(
      request?: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
      options?: gax.CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listProjectBillingInfo.createStream(
      this.innerApiCalls.listProjectBillingInfo as gax.GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to {@link listProjectBillingInfo}, but returns an iterable object.
 *
 * for-await-of syntax is used with the iterable to recursively get response element on-demand.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the billing account associated with the projects that
 *   you want to list. For example, `billingAccounts/012345-567890-ABCDEF`.
 * @param {number} request.pageSize
 *   Requested page size. The maximum page size is 100; this is also the
 *   default.
 * @param {string} request.pageToken
 *   A token identifying a page of results to be returned. This should be a
 *   `next_page_token` value returned from a previous `ListProjectBillingInfo`
 *   call. If unspecified, the first page of results is returned.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
 */
  listProjectBillingInfoAsync(
      request?: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
      options?: gax.CallOptions):
    AsyncIterable<protos.google.cloud.billing.v1.IProjectBillingInfo>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listProjectBillingInfo.asyncIterate(
      this.innerApiCalls['listProjectBillingInfo'] as GaxCall,
      request as unknown as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.billing.v1.IProjectBillingInfo>;
  }
  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified billingAccount resource name string.
   *
   * @param {string} billing_account
   * @returns {string} Resource name string.
   */
  billingAccountPath(billingAccount:string) {
    return this.pathTemplates.billingAccountPathTemplate.render({
      billing_account: billingAccount,
    });
  }

  /**
   * Parse the billing_account from BillingAccount resource.
   *
   * @param {string} billingAccountName
   *   A fully-qualified path representing BillingAccount resource.
   * @returns {string} A string representing the billing_account.
   */
  matchBillingAccountFromBillingAccountName(billingAccountName: string) {
    return this.pathTemplates.billingAccountPathTemplate.match(billingAccountName).billing_account;
  }

  /**
   * Return a fully-qualified service resource name string.
   *
   * @param {string} service
   * @returns {string} Resource name string.
   */
  servicePath(service:string) {
    return this.pathTemplates.servicePathTemplate.render({
      service: service,
    });
  }

  /**
   * Parse the service from Service resource.
   *
   * @param {string} serviceName
   *   A fully-qualified path representing Service resource.
   * @returns {string} A string representing the service.
   */
  matchServiceFromServiceName(serviceName: string) {
    return this.pathTemplates.servicePathTemplate.match(serviceName).service;
  }

  /**
   * Return a fully-qualified sku resource name string.
   *
   * @param {string} service
   * @param {string} sku
   * @returns {string} Resource name string.
   */
  skuPath(service:string,sku:string) {
    return this.pathTemplates.skuPathTemplate.render({
      service: service,
      sku: sku,
    });
  }

  /**
   * Parse the service from Sku resource.
   *
   * @param {string} skuName
   *   A fully-qualified path representing Sku resource.
   * @returns {string} A string representing the service.
   */
  matchServiceFromSkuName(skuName: string) {
    return this.pathTemplates.skuPathTemplate.match(skuName).service;
  }

  /**
   * Parse the sku from Sku resource.
   *
   * @param {string} skuName
   *   A fully-qualified path representing Sku resource.
   * @returns {string} A string representing the sku.
   */
  matchSkuFromSkuName(skuName: string) {
    return this.pathTemplates.skuPathTemplate.match(skuName).sku;
  }

  /**
   * Terminate the GRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   */
  close(): Promise<void> {
    this.initialize();
    if (!this._terminated) {
      return this.cloudBillingStub!.then(stub => {
        this._terminated = true;
        stub.close();
      });
    }
    return Promise.resolve();
  }
}
